<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <bean id="repoExternalURL" class="java.net.URL">
    <constructor-arg value="${REPO_EXTERNAL_URL}"/>
  </bean>

  <bean id="addBearerAuthorization" class="edu.umd.lib.camel.processors.AddBearerAuthorizationProcessor">
    <property name="authTokenService">
      <bean class="edu.umd.lib.fcrepo.AuthTokenService">
        <property name="secret" value="${JWT_SECRET}"/>
      </bean>
    </property>
  </bean>

  <camelContext xmlns="http://camel.apache.org/schema/spring" id="Triplestore" streamCache="true">
    <route id="edu.umd.lib.camel.routes.TriplestoreIndexing">
      <from uri="activemq:queue:fedoratriplestore"/>
      <choice>
        <when>
          <simple>${header.CamelFcrepoEventName} starts with "create"</simple>
          <to uri="direct:index.triplestore.create"/>
        </when>
        <when>
          <simple>${header.CamelFcrepoEventName} starts with "delete"</simple>
          <to uri="direct:index.triplestore.delete"/>
        </when>
      </choice>
    </route>

    <route id="edu.umd.lib.camel.routes.IndexTriplestoreCreate">
      <from uri="direct:index.triplestore.create"/>
      <!-- generate a Bearer auth token for the Authorization header -->
      <process ref="addBearerAuthorization"/>
      <!-- check whether this is a binary or not -->
      <setHeader headerName="CamelHttpUri">
        <simple>${sysenv.REPO_INTERNAL_URL}${header.CamelFcrepoPath}</simple>
      </setHeader>
      <setHeader headerName="CamelHttpMethod">
        <constant>HEAD</constant>
      </setHeader>
      <!-- send the HEAD request to fcrepo -->
      <to uri="http4:fcrepo"/>
      <filter>
        <simple>${header.Link} contains '&lt;http://www.w3.org/ns/ldp#NonRDFSource>;rel="type"'</simple>
        <setHeader headerName="CamelHttpUri">
          <simple>${sysenv.REPO_INTERNAL_URL}${header.CamelFcrepoPath}/fcr:metadata</simple>
        </setHeader>
      </filter>
      <!-- get the RDF to insert into the triplestore -->
      <setHeader headerName="CamelHttpMethod">
        <constant>GET</constant>
      </setHeader>
      <setHeader headerName="Accept">
        <constant>application/n-triples</constant>
      </setHeader>
      <setHeader headerName="X-Forwarded-Host">
        <simple>${bean:repoExternalURL.authority}</simple>
      </setHeader>
      <setHeader headerName="X-Forwarded-Proto">
        <simple>${bean:repoExternalURL.protocol}</simple>
      </setHeader>
      <log loggingLevel="DEBUG" message="GET ${header.CamelHttpUri}"/>
      <to uri="http4:fcrepo"/>
      <setBody>
        <simple>INSERT DATA {\n${body}}</simple>
      </setBody>
      <to uri="direct:index.triplestore.http"/>
    </route>

    <route id="edu.umd.lib.camel.routes.IndexTriplestoreDelete">
      <from uri="direct:index.triplestore.delete"/>
      <setBody>
        <simple><![CDATA[
DELETE { <${header.CamelFcrepoUri}> ?p ?o }
INSERT {}
WHERE  { <${header.CamelFcrepoUri}> ?p ?o }
        ]]></simple>
      </setBody>
      <to uri="direct:index.triplestore.http"/>
    </route>

    <route id="edu.umd.lib.camel.routes.IndexTriplestoreHttp">
      <from uri="direct:index.triplestore.http"/>
      <removeHeaders pattern="*"/>
      <setHeader headerName="CamelHttpUri">
        <simple>${sysenv.INDEX_TRIPLESTORE_UPDATE_URI}</simple>
      </setHeader>
      <setHeader headerName="CamelHttpMethod">
        <constant>POST</constant>
      </setHeader>
      <setHeader headerName="Content-Type">
        <constant>application/sparql-update</constant>
      </setHeader>
      <to uri="http4:triplestore"/>
    </route>
  </camelContext>
</beans>
